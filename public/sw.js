!function(){"use strict";var e;let t,r,s,a,n,i,o;let l={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"serwist",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},c=e=>[l.prefix,e,l.suffix].filter(e=>e&&e.length>0).join("-"),h=e=>{for(let t of Object.keys(l))e(t)},u=e=>{h(t=>{let r=e[t];"string"==typeof r&&(l[t]=r)})},d=e=>e||c(l.googleAnalytics),f=e=>e||c(l.precache),y=e=>e||c(l.runtime),w=(e,...t)=>{let r=e;return t.length>0&&(r+=` :: ${JSON.stringify(t)}`),r};class p extends Error{details;constructor(e,t){super(w(e,t)),this.name=e,this.details=t}}let g=new Set,m=()=>{self.addEventListener("activate",()=>self.clients.claim())},_=async(e,r)=>{let s=null;if(e.url&&(s=new URL(e.url).origin),s!==self.location.origin)throw new p("cross-origin-copy-response",{origin:s});let a=e.clone(),n={headers:new Headers(a.headers),status:a.status,statusText:a.statusText},i=r?r(n):n,o=!function(){if(void 0===t){let e=new Response("");if("body"in e)try{new Response(e.body),t=!0}catch(e){t=!1}t=!1}return t}()?await a.blob():a.body;return new Response(o,i)},q=e=>{u(e)};class b{promise;resolve;reject;constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}function v(e,t){let r=new URL(e);for(let e of t)r.searchParams.delete(e);return r.href}async function R(e,t,r,s){let a=v(t.url,r);if(t.url===a)return e.match(t,s);let n={...s,ignoreSearch:!0};for(let i of(await e.keys(t,n)))if(a===v(i.url,r))return e.match(i,s)}let E=async()=>{for(let e of g)await e()},C=e=>new URL(String(e),location.href).href.replace(RegExp(`^${location.origin}`),"");function L(e){return new Promise(t=>setTimeout(t,e))}let D=(e,t)=>{let r=t();return e.waitUntil(r),r},S=e=>e&&"object"==typeof e?e:{handle:e};class T{handler;match;method;catchHandler;constructor(e,t,r="GET"){this.handler=S(t),this.match=e,this.method=r}setCatchHandler(e){this.catchHandler=S(e)}}class k extends T{constructor(e,t,r){super(({url:t})=>{let r=e.exec(t.href);if(r&&(t.origin===location.origin||0===r.index))return r.slice(1)},t,r)}}let P=(e,t,r)=>{let s;if("string"==typeof e){let a=new URL(e,location.href);s=new T(({url:e})=>e.href===a.href,t,r)}else if(e instanceof RegExp)s=new k(e,t,r);else if("function"==typeof e)s=new T(e,t,r);else if(e instanceof T)s=e;else throw new p("unsupported-route-type",{moduleName:"@serwist/routing",funcName:"registerRoute",paramName:"capture"});return s};class I{_routes;_defaultHandlerMap;_fetchListenerHandler=null;_cacheListenerHandler=null;_catchHandler;constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){this._fetchListenerHandler||(this._fetchListenerHandler=e=>{let{request:t}=e,r=this.handleRequest({request:t,event:e});r&&e.respondWith(r)},self.addEventListener("fetch",this._fetchListenerHandler))}removeFetchListener(){this._fetchListenerHandler&&(self.removeEventListener("fetch",this._fetchListenerHandler),this._fetchListenerHandler=null)}addCacheListener(){this._cacheListenerHandler||(this._cacheListenerHandler=e=>{if(e.data&&"CACHE_URLS"===e.data.type){let{payload:t}=e.data,r=Promise.all(t.urlsToCache.map(t=>{"string"==typeof t&&(t=[t]);let r=new Request(...t);return this.handleRequest({request:r,event:e})}));e.waitUntil(r),e.ports?.[0]&&r.then(()=>e.ports[0].postMessage(!0))}},self.addEventListener("message",this._cacheListenerHandler))}removeCacheListener(){this._cacheListenerHandler&&self.removeEventListener("message",this._cacheListenerHandler)}handleRequest({request:e,event:t}){let r;let s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;let a=s.origin===location.origin,{params:n,route:i}=this.findMatchingRoute({event:t,request:e,sameOrigin:a,url:s}),o=i?.handler,l=e.method;if(!o&&this._defaultHandlerMap.has(l)&&(o=this._defaultHandlerMap.get(l)),!o)return;try{r=o.handle({url:s,request:e,event:t,params:n})}catch(e){r=Promise.reject(e)}let c=i?.catchHandler;return r instanceof Promise&&(this._catchHandler||c)&&(r=r.catch(async r=>{if(c)try{return await c.handle({url:s,request:e,event:t,params:n})}catch(e){e instanceof Error&&(r=e)}if(this._catchHandler)return this._catchHandler.handle({url:s,request:e,event:t});throw r})),r}findMatchingRoute({url:e,sameOrigin:t,request:r,event:s}){for(let a of this._routes.get(r.method)||[]){let n;let i=a.match({url:e,sameOrigin:t,request:r,event:s});if(i)return Array.isArray(n=i)&&0===n.length?n=void 0:i.constructor===Object&&0===Object.keys(i).length?n=void 0:"boolean"==typeof i&&(n=void 0),{route:a,params:n}}return{}}setDefaultHandler(e,t="GET"){this._defaultHandlerMap.set(t,S(e))}setCatchHandler(e){this._catchHandler=S(e)}registerCapture(e,t,r){let s=P(e,t,r);return this.registerRoute(s),s}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new p("unregister-route-but-not-found-with-method",{method:e.method});let t=this._routes.get(e.method).indexOf(e);if(t>-1)this._routes.get(e.method).splice(t,1);else throw new p("unregister-route-route-not-registered")}}let U=()=>(a||((a=new I).addFetchListener(),a.addCacheListener()),a);function x(e){return"string"==typeof e?new Request(e):e}class N{event;request;url;params;_cacheKeys={};_strategy;_handlerDeferred;_extendLifetimePromises;_plugins;_pluginStateMap;constructor(e,t){for(let r of(this.event=t.event,this.request=t.request,t.url&&(this.url=t.url,this.params=t.params),this._strategy=e,this._handlerDeferred=new b,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map,this._plugins))this._pluginStateMap.set(r,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){let{event:t}=this,r=x(e);if("navigate"===r.mode&&t instanceof FetchEvent&&t.preloadResponse){let e=await t.preloadResponse;if(e)return e}let s=this.hasCallback("fetchDidFail")?r.clone():null;try{for(let e of this.iterateCallbacks("requestWillFetch"))r=await e({request:r.clone(),event:t})}catch(e){if(e instanceof Error)throw new p("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}let a=r.clone();try{let e;for(let s of(e=await fetch(r,"navigate"===r.mode?void 0:this._strategy.fetchOptions),this.iterateCallbacks("fetchDidSucceed")))e=await s({event:t,request:a,response:e});return e}catch(e){throw s&&await this.runCallbacks("fetchDidFail",{error:e,event:t,originalRequest:s.clone(),request:a.clone()}),e}}async fetchAndCachePut(e){let t=await this.fetch(e),r=t.clone();return this.waitUntil(this.cachePut(e,r)),t}async cacheMatch(e){let t;let r=x(e),{cacheName:s,matchOptions:a}=this._strategy,n=await this.getCacheKey(r,"read"),i={...a,cacheName:s};for(let e of(t=await caches.match(n,i),this.iterateCallbacks("cachedResponseWillBeUsed")))t=await e({cacheName:s,matchOptions:a,cachedResponse:t,request:n,event:this.event})||void 0;return t}async cachePut(e,t){let r=x(e);await L(0);let s=await this.getCacheKey(r,"write");if(!t)throw new p("cache-put-with-no-response",{url:C(s.url)});let a=await this._ensureResponseSafeToCache(t);if(!a)return!1;let{cacheName:n,matchOptions:i}=this._strategy,o=await self.caches.open(n),l=this.hasCallback("cacheDidUpdate"),c=l?await R(o,s.clone(),["__WB_REVISION__"],i):null;try{await o.put(s,l?a.clone():a)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await E(),e}for(let e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:n,oldResponse:c,newResponse:a.clone(),request:s,event:this.event});return!0}async getCacheKey(e,t){let r=`${e.url} | ${t}`;if(!this._cacheKeys[r]){let s=e;for(let e of this.iterateCallbacks("cacheKeyWillBeUsed"))s=x(await e({mode:t,request:s,event:this.event,params:this.params}));this._cacheKeys[r]=s}return this._cacheKeys[r]}hasCallback(e){for(let t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(let r of this.iterateCallbacks(e))await r(t)}*iterateCallbacks(e){for(let t of this._strategy.plugins)if("function"==typeof t[e]){let r=this._pluginStateMap.get(t),s=s=>{let a={...s,state:r};return t[e](a)};yield s}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,r=!1;for(let e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,r=!0,!t)break;return!r&&t&&200!==t.status&&(t=void 0),t}}class K{cacheName;plugins;fetchOptions;matchOptions;constructor(e={}){this.cacheName=y(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){let[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});let t=e.event,r="string"==typeof e.request?new Request(e.request):e.request,s=new N(this,e.url?{event:t,request:r,url:e.url,params:e.params}:{event:t,request:r}),a=this._getResponse(s,r,t),n=this._awaitComplete(a,s,r,t);return[a,n]}async _getResponse(e,t,r){let s;await e.runCallbacks("handlerWillStart",{event:r,request:t});try{if(s=await this._handle(t,e),void 0===s||"error"===s.type)throw new p("no-response",{url:t.url})}catch(a){if(a instanceof Error){for(let n of e.iterateCallbacks("handlerDidError"))if(void 0!==(s=await n({error:a,event:r,request:t})))break}if(!s)throw a}for(let a of e.iterateCallbacks("handlerWillRespond"))s=await a({event:r,request:t,response:s});return s}async _awaitComplete(e,t,r,s){let a,n;try{a=await e}catch(e){}try{await t.runCallbacks("handlerDidRespond",{event:s,request:r,response:a}),await t.doneWaiting()}catch(e){e instanceof Error&&(n=e)}if(await t.runCallbacks("handlerDidComplete",{event:s,request:r,response:a,error:n}),t.destroy(),n)throw n}}let B={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};class A extends K{_networkTimeoutSeconds;constructor(e={}){super(e),this.plugins.some(e=>"cacheWillUpdate"in e)||this.plugins.unshift(B),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0}async _handle(e,t){let r;let s=[],a=[];if(this._networkTimeoutSeconds){let{id:n,promise:i}=this._getTimeoutPromise({request:e,logs:s,handler:t});r=n,a.push(i)}let n=this._getNetworkPromise({timeoutId:r,request:e,logs:s,handler:t});a.push(n);let i=await t.waitUntil((async()=>await t.waitUntil(Promise.race(a))||await n)());if(!i)throw new p("no-response",{url:e.url});return i}_getTimeoutPromise({request:e,logs:t,handler:r}){let s;return{promise:new Promise(t=>{s=setTimeout(async()=>{t(await r.cacheMatch(e))},1e3*this._networkTimeoutSeconds)}),id:s}}async _getNetworkPromise({timeoutId:e,request:t,logs:r,handler:s}){let a,n;try{n=await s.fetchAndCachePut(t)}catch(e){e instanceof Error&&(a=e)}return e&&clearTimeout(e),(a||!n)&&(n=await s.cacheMatch(t)),n}}class O extends K{_networkTimeoutSeconds;constructor(e={}){super(e),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0}async _handle(e,t){let r,s;try{let s=[t.fetch(e)];if(this._networkTimeoutSeconds){let e=L(1e3*this._networkTimeoutSeconds);s.push(e)}if(!(r=await Promise.race(s)))throw Error(`Timed out the network response after ${this._networkTimeoutSeconds} seconds.`)}catch(e){e instanceof Error&&(s=e)}if(!r)throw new p("no-response",{url:e.url,error:s});return r}}let F=(e,t)=>t.some(t=>e instanceof t),H=new WeakMap,M=new WeakMap,W=new WeakMap,j={get(e,t,r){if(e instanceof IDBTransaction){if("done"===t)return H.get(e);if("store"===t)return r.objectStoreNames[1]?void 0:r.objectStore(r.objectStoreNames[0])}return $(e[t])},set:(e,t,r)=>(e[t]=r,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function $(e){var t;if(e instanceof IDBRequest)return function(e){let t=new Promise((t,r)=>{let s=()=>{e.removeEventListener("success",a),e.removeEventListener("error",n)},a=()=>{t($(e.result)),s()},n=()=>{r(e.error),s()};e.addEventListener("success",a),e.addEventListener("error",n)});return W.set(t,e),t}(e);if(M.has(e))return M.get(e);let a="function"==typeof(t=e)?(s||(s=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(t)?function(...e){return t.apply(G(this),e),$(this.request)}:function(...e){return $(t.apply(G(this),e))}:(t instanceof IDBTransaction&&function(e){if(H.has(e))return;let t=new Promise((t,r)=>{let s=()=>{e.removeEventListener("complete",a),e.removeEventListener("error",n),e.removeEventListener("abort",n)},a=()=>{t(),s()},n=()=>{r(e.error||new DOMException("AbortError","AbortError")),s()};e.addEventListener("complete",a),e.addEventListener("error",n),e.addEventListener("abort",n)});H.set(e,t)}(t),F(t,r||(r=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])))?new Proxy(t,j):t;return a!==e&&(M.set(e,a),W.set(a,e)),a}let G=e=>W.get(e),V=["get","getKey","getAll","getAllKeys","count"],Q=["put","add","delete","clear"],z=new Map;function J(e,t){if(!(e instanceof IDBDatabase&&!(t in e)&&"string"==typeof t))return;if(z.get(t))return z.get(t);let r=t.replace(/FromIndex$/,""),s=t!==r,a=Q.includes(r);if(!(r in(s?IDBIndex:IDBObjectStore).prototype)||!(a||V.includes(r)))return;let n=async function(e,...t){let n=this.transaction(e,a?"readwrite":"readonly"),i=n.store;return s&&(i=i.index(t.shift())),(await Promise.all([i[r](...t),a&&n.done]))[0]};return z.set(t,n),n}j={...i=j,get:(e,t,r)=>J(e,t)||i.get(e,t,r),has:(e,t)=>!!J(e,t)||i.has(e,t)};let X=["continue","continuePrimaryKey","advance"],Y={},Z=new WeakMap,ee=new WeakMap,et={get(e,t){if(!X.includes(t))return e[t];let r=Y[t];return r||(r=Y[t]=function(...e){Z.set(this,ee.get(this)[t](...e))}),r}};async function*er(...e){let t=this;if(t instanceof IDBCursor||(t=await t.openCursor(...e)),!t)return;let r=new Proxy(t,et);for(ee.set(r,t),W.set(r,G(t));t;)yield r,t=await (Z.get(r)||t.continue()),Z.delete(r)}function es(e,t){return t===Symbol.asyncIterator&&F(e,[IDBIndex,IDBObjectStore,IDBCursor])||"iterate"===t&&F(e,[IDBIndex,IDBObjectStore])}j={...o=j,get:(e,t,r)=>es(e,t)?er:o.get(e,t,r),has:(e,t)=>es(e,t)||o.has(e,t)};let ea=async(e,t,r)=>{let s=t.map((e,t)=>({index:t,item:e})),a=async e=>{let t=[];for(;;){let a=s.pop();if(!a)return e(t);let n=await r(a.item);t.push({result:n,index:a.index})}},n=Array.from({length:e},()=>new Promise(a));return(await Promise.all(n)).flat().sort((e,t)=>e.index<t.index?-1:1).map(e=>e.result)};class en extends K{_fallbackToNetwork;static defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e};static copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await _(e):e};constructor(e={}){e.cacheName=f(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(en.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){return await t.cacheMatch(e)||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let r;let s=t.params||{};if(this._fallbackToNetwork){let a=s.integrity,n=e.integrity,i=!n||n===a;r=await t.fetch(new Request(e,{integrity:"no-cors"!==e.mode?n||a:void 0})),a&&i&&"no-cors"!==e.mode&&(this._useDefaultCacheabilityPluginIfNeeded(),await t.cachePut(e,r.clone()))}else throw new p("missing-precache-entry",{cacheName:this.cacheName,url:e.url});return r}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();let r=await t.fetch(e);if(!await t.cachePut(e,r.clone()))throw new p("bad-precaching-response",{url:e.url,status:r.status});return r}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(let[r,s]of this.plugins.entries())s!==en.copyRedirectedCacheableResponsesPlugin&&(s===en.defaultPrecacheCacheabilityPlugin&&(e=r),s.cacheWillUpdate&&t++);0===t?this.plugins.push(en.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}class ei{_precacheController;constructor({precacheController:e}){this._precacheController=e}cacheKeyWillBeUsed=async({request:e,params:t})=>{let r=t?.cacheKey||this._precacheController.getCacheKeyForURL(e.url);return r?new Request(r,{headers:e.headers}):e}}class eo{updatedURLs=[];notUpdatedURLs=[];handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)};cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:r})=>{if("install"===e.type&&t?.originalRequest&&t.originalRequest instanceof Request){let e=t.originalRequest.url;r?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return r}}class el{_installAndActiveListenersAdded;_concurrentPrecaching;_strategy;_urlsToCacheKeys=new Map;_urlsToCacheModes=new Map;_cacheKeysToIntegrities=new Map;constructor({cacheName:e,plugins:t=[],fallbackToNetwork:r=!0,concurrentPrecaching:s=1}={}){this._concurrentPrecaching=s,this._strategy=new en({cacheName:f(e),plugins:[...t,new ei({precacheController:this})],fallbackToNetwork:r}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){let t=[];for(let r of e){"string"==typeof r?t.push(r):r&&!r.integrity&&void 0===r.revision&&t.push(r.url);let{cacheKey:e,url:s}=function(e){if(!e)throw new p("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){let t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}let{revision:t,url:r}=e;if(!r)throw new p("add-to-cache-list-unexpected-type",{entry:e});if(!t){let e=new URL(r,location.href);return{cacheKey:e.href,url:e.href}}let s=new URL(r,location.href),a=new URL(r,location.href);return s.searchParams.set("__WB_REVISION__",t),{cacheKey:s.href,url:a.href}}(r),a="string"!=typeof r&&r.revision?"reload":"default";if(this._urlsToCacheKeys.has(s)&&this._urlsToCacheKeys.get(s)!==e)throw new p("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(s),secondEntry:e});if("string"!=typeof r&&r.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==r.integrity)throw new p("add-to-cache-list-conflicting-integrities",{url:s});this._cacheKeysToIntegrities.set(e,r.integrity)}this._urlsToCacheKeys.set(s,e),this._urlsToCacheModes.set(s,a),t.length>0&&console.warn(`Serwist is precaching URLs without revision info: ${t.join(", ")}
This is generally NOT safe. Learn more at https://bit.ly/wb-precache`)}}install(e){return D(e,async()=>{let t=new eo;this.strategy.plugins.push(t),await ea(this._concurrentPrecaching,Array.from(this._urlsToCacheKeys.entries()),async([t,r])=>{let s=this._cacheKeysToIntegrities.get(r),a=this._urlsToCacheModes.get(t),n=new Request(t,{integrity:s,cache:a,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({event:e,request:n,url:new URL(n.url),params:{cacheKey:r}}))});let{updatedURLs:r,notUpdatedURLs:s}=t;return{updatedURLs:r,notUpdatedURLs:s}})}activate(e){return D(e,async()=>{let e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),r=new Set(this._urlsToCacheKeys.values()),s=[];for(let a of t)r.has(a.url)||(await e.delete(a),s.push(a.url));return{deletedCacheRequests:s}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){let t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){let t=e instanceof Request?e.url:e,r=this.getCacheKeyForURL(t);if(r)return(await self.caches.open(this.strategy.cacheName)).match(r)}createHandlerBoundToURL(e){let t=this.getCacheKeyForURL(e);if(!t)throw new p("non-precached-url",{url:e});return r=>(r.request=new Request(e),r.params={cacheKey:t,...r.params},this.strategy.handle(r))}}let ec=()=>(n||(n=new el),n),eh="requests",eu="queueName";class ed{_db=null;async addEntry(e){let t=(await this.getDb()).transaction(eh,"readwrite",{durability:"relaxed"});await t.store.add(e),await t.done}async getFirstEntryId(){let e=await this.getDb(),t=await e.transaction(eh).store.openCursor();return t?.value.id}async getAllEntriesByQueueName(e){let t=await this.getDb();return await t.getAllFromIndex(eh,eu,IDBKeyRange.only(e))||[]}async getEntryCountByQueueName(e){return(await this.getDb()).countFromIndex(eh,eu,IDBKeyRange.only(e))}async deleteEntry(e){let t=await this.getDb();await t.delete(eh,e)}async getFirstEntryByQueueName(e){return await this.getEndEntryFromIndex(IDBKeyRange.only(e),"next")}async getLastEntryByQueueName(e){return await this.getEndEntryFromIndex(IDBKeyRange.only(e),"prev")}async getEndEntryFromIndex(e,t){let r=await this.getDb(),s=await r.transaction(eh).store.index(eu).openCursor(e,t);return s?.value}async getDb(){return this._db||(this._db=await function(e,t,{blocked:r,upgrade:s,blocking:a,terminated:n}={}){let i=indexedDB.open(e,3),o=$(i);return s&&i.addEventListener("upgradeneeded",e=>{s($(i.result),e.oldVersion,e.newVersion,$(i.transaction),e)}),r&&i.addEventListener("blocked",e=>r(e.oldVersion,e.newVersion,e)),o.then(e=>{n&&e.addEventListener("close",()=>n()),a&&e.addEventListener("versionchange",e=>a(e.oldVersion,e.newVersion,e))}).catch(()=>{}),o}("serwist-background-sync",0,{upgrade:this._upgradeDb})),this._db}_upgradeDb(e,t){t>0&&t<3&&e.objectStoreNames.contains(eh)&&e.deleteObjectStore(eh),e.createObjectStore(eh,{autoIncrement:!0,keyPath:"id"}).createIndex(eu,eu,{unique:!1})}}class ef{_queueName;_queueDb;constructor(e){this._queueName=e,this._queueDb=new ed}async pushEntry(e){delete e.id,e.queueName=this._queueName,await this._queueDb.addEntry(e)}async unshiftEntry(e){let t=await this._queueDb.getFirstEntryId();t?e.id=t-1:delete e.id,e.queueName=this._queueName,await this._queueDb.addEntry(e)}async popEntry(){return this._removeEntry(await this._queueDb.getLastEntryByQueueName(this._queueName))}async shiftEntry(){return this._removeEntry(await this._queueDb.getFirstEntryByQueueName(this._queueName))}async getAll(){return await this._queueDb.getAllEntriesByQueueName(this._queueName)}async size(){return await this._queueDb.getEntryCountByQueueName(this._queueName)}async deleteEntry(e){await this._queueDb.deleteEntry(e)}async _removeEntry(e){return e&&await this.deleteEntry(e.id),e}}let ey=["method","referrer","referrerPolicy","mode","credentials","cache","redirect","integrity","keepalive"];class ew{_requestData;static async fromRequest(e){let t={url:e.url,headers:{}};for(let r of("GET"!==e.method&&(t.body=await e.clone().arrayBuffer()),e.headers.forEach((e,r)=>{t.headers[r]=e}),ey))void 0!==e[r]&&(t[r]=e[r]);return new ew(t)}constructor(e){"navigate"===e.mode&&(e.mode="same-origin"),this._requestData=e}toObject(){let e=Object.assign({},this._requestData);return e.headers=Object.assign({},this._requestData.headers),e.body&&(e.body=e.body.slice(0)),e}toRequest(){return new Request(this._requestData.url,this._requestData)}clone(){return new ew(this.toObject())}}let ep="serwist-background-sync",eg=new Set,em=e=>{let t={request:new ew(e.requestData).toRequest(),timestamp:e.timestamp};return e.metadata&&(t.metadata=e.metadata),t};class e_{_name;_onSync;_maxRetentionTime;_queueStore;_forceSyncFallback;_syncInProgress=!1;_requestsAddedDuringSync=!1;constructor(e,{forceSyncFallback:t,onSync:r,maxRetentionTime:s}={}){if(eg.has(e))throw new p("duplicate-queue-name",{name:e});eg.add(e),this._name=e,this._onSync=r||this.replayRequests,this._maxRetentionTime=s||10080,this._forceSyncFallback=!!t,this._queueStore=new ef(this._name),this._addSyncListener()}get name(){return this._name}async pushRequest(e){await this._addRequest(e,"push")}async unshiftRequest(e){await this._addRequest(e,"unshift")}async popRequest(){return this._removeRequest("pop")}async shiftRequest(){return this._removeRequest("shift")}async getAll(){let e=await this._queueStore.getAll(),t=Date.now(),r=[];for(let s of e){let e=6e4*this._maxRetentionTime;t-s.timestamp>e?await this._queueStore.deleteEntry(s.id):r.push(em(s))}return r}async size(){return await this._queueStore.size()}async _addRequest({request:e,metadata:t,timestamp:r=Date.now()},s){let a={requestData:(await ew.fromRequest(e.clone())).toObject(),timestamp:r};switch(t&&(a.metadata=t),s){case"push":await this._queueStore.pushEntry(a);break;case"unshift":await this._queueStore.unshiftEntry(a)}this._syncInProgress?this._requestsAddedDuringSync=!0:await this.registerSync()}async _removeRequest(e){let t;let r=Date.now();switch(e){case"pop":t=await this._queueStore.popEntry();break;case"shift":t=await this._queueStore.shiftEntry()}if(t){let s=6e4*this._maxRetentionTime;return r-t.timestamp>s?this._removeRequest(e):em(t)}}async replayRequests(){let e;for(;e=await this.shiftRequest();)try{await fetch(e.request.clone())}catch(t){throw await this.unshiftRequest(e),new p("queue-replay-failed",{name:this._name})}}async registerSync(){if("sync"in self.registration&&!this._forceSyncFallback)try{await self.registration.sync.register(`${ep}:${this._name}`)}catch(e){}}_addSyncListener(){"sync"in self.registration&&!this._forceSyncFallback?self.addEventListener("sync",e=>{if(e.tag===`${ep}:${this._name}`){let t=async()=>{let t;this._syncInProgress=!0;try{await this._onSync({queue:this})}catch(e){if(e instanceof Error)throw e}finally{this._requestsAddedDuringSync&&!(t&&!e.lastChance)&&await this.registerSync(),this._syncInProgress=!1,this._requestsAddedDuringSync=!1}};e.waitUntil(t())}}):this._onSync({queue:this})}static get _queueNames(){return eg}}class eq{_queue;constructor(e,t){this._queue=new e_(e,t)}async fetchDidFail({request:e}){await this._queue.pushRequest({request:e})}}let eb="www.google-analytics.com",ev="www.googletagmanager.com",eR=/^\/(\w+\/)?collect/,eE=e=>async({queue:t})=>{let r;for(;r=await t.shiftRequest();){let{request:s,timestamp:a}=r,n=new URL(s.url);try{let t="POST"===s.method?new URLSearchParams(await s.clone().text()):n.searchParams,r=a-(Number(t.get("qt"))||0),i=Date.now()-r;if(t.set("qt",String(i)),e.parameterOverrides)for(let r of Object.keys(e.parameterOverrides)){let s=e.parameterOverrides[r];t.set(r,s)}"function"==typeof e.hitFilter&&e.hitFilter.call(null,t),await fetch(new Request(n.origin+n.pathname,{body:t.toString(),method:"POST",mode:"cors",credentials:"omit",headers:{"Content-Type":"text/plain"}}))}catch(e){throw await t.unshiftRequest(r),e}}},eC=e=>{let t=({url:e})=>e.hostname===eb&&eR.test(e.pathname),r=new O({plugins:[e]});return[new T(t,r,"GET"),new T(t,r,"POST")]},eL=e=>new T(({url:e})=>e.hostname===eb&&"/analytics.js"===e.pathname,new A({cacheName:e}),"GET"),eD=e=>new T(({url:e})=>e.hostname===ev&&"/gtag/js"===e.pathname,new A({cacheName:e}),"GET"),eS=e=>new T(({url:e})=>e.hostname===ev&&"/gtm.js"===e.pathname,new A({cacheName:e}),"GET"),eT=({cacheName:e,router:t=U(),...r}={})=>{let s=d(e),a=new eq("serwist-google-analytics",{maxRetentionTime:2880,onSync:eE(r)});for(let e of[eS(s),eL(s),eD(s),...eC(a)])t.registerRoute(e)};class ek{_fallbackUrls;_precacheController;constructor({fallbackUrls:e,precacheController:t}){this._fallbackUrls=e,this._precacheController=t||ec()}async handlerDidError(e){for(let t of this._fallbackUrls)if("string"==typeof t){let e=await this._precacheController.matchPrecache(t);if(void 0!==e)return e}else if(t.matcher(e)){let e=await this._precacheController.matchPrecache(t.url);if(void 0!==e)return e}}}let eP=(e,t,r)=>U().registerCapture(e,t,r);class eI extends T{constructor(e,t){super(({request:r})=>{let s=e.getURLsToCacheKeys();for(let a of function*(e,{ignoreURLParametersMatching:t=[/^utm_/,/^fbclid$/],directoryIndex:r="index.html",cleanURLs:s=!0,urlManipulation:a}={}){let n=new URL(e,location.href);n.hash="",yield n.href;let i=function(e,t=[]){for(let r of[...e.searchParams.keys()])t.some(e=>e.test(r))&&e.searchParams.delete(r);return e}(n,t);if(yield i.href,r&&i.pathname.endsWith("/")){let e=new URL(i.href);e.pathname+=r,yield e.href}if(s){let e=new URL(i.href);e.pathname+=".html",yield e.href}if(a)for(let e of a({url:n}))yield e.href}(r.url,t)){let t=s.get(a);if(t){let r=e.getIntegrityForCacheKey(t);return{cacheKey:t,integrity:r}}}},e.strategy)}}let eU="-precache-",ex=async(e,t=eU)=>{let r=(await self.caches.keys()).filter(r=>r.includes(t)&&r.includes(self.registration.scope)&&r!==e);return await Promise.all(r.map(e=>self.caches.delete(e))),r},eN=()=>{self.addEventListener("activate",e=>{let t=f();e.waitUntil(ex(t).then(e=>{}))})},eK=e=>ec().createHandlerBoundToURL(e),eB=e=>{eP(new eI(ec(),e))},eA=e=>{ec().precache(e)},eO=(e,t)=>{eA(e),eB(t)};class eF extends T{_allowlist;_denylist;constructor(e,{allowlist:t=[/./],denylist:r=[]}={}){super(e=>this._match(e),e),this._allowlist=t,this._denylist=r}_match({url:e,request:t}){if(t&&"navigate"!==t.mode)return!1;let r=e.pathname+e.search;for(let e of this._denylist)if(e.test(r))return!1;return!!this._allowlist.some(e=>e.test(r))}}let eH=()=>{self.__WB_DISABLE_DEV_LOGS=!0},eM=({runtimeCaching:e,entries:t,precacheOptions:r})=>{eO(t,r);let s=new ek({fallbackUrls:t});return e.forEach(e=>(e.handler instanceof K&&!e.handler.plugins.some(e=>"handlerDidError"in e)&&e.handler.plugins.push(s),e)),e},eW=()=>!!self.registration?.navigationPreload,ej=e=>{eW()&&self.addEventListener("activate",t=>{t.waitUntil(self.registration.navigationPreload.enable().then(()=>{e&&self.registration.navigationPreload.setHeaderValue(e)}))})};class e${_precacheController;_router;constructor({precacheController:e,router:t}={}){this._precacheController=e||ec(),this._router=t||U()}install({precacheEntries:e,precacheOptions:t,cleanupOutdatedCaches:r,navigateFallback:s,navigateFallbackAllowlist:a,navigateFallbackDenylist:n,skipWaiting:i=!1,importScripts:o,navigationPreload:l=!1,cacheId:c,clientsClaim:h=!1,runtimeCaching:u,offlineAnalyticsConfig:d,disableDevLogs:f=!1,fallbacks:y}={}){if(o&&o.length>0&&self.importScripts(...o),l&&ej(),void 0!==c&&q({prefix:c}),i?self.skipWaiting():self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}),h&&m(),e&&e.length>0&&(this._precacheController.precache(e),this._router.registerRoute(new eI(this._precacheController,t)),r&&eN(),s&&this._router.registerRoute(new eF(eK(s),{allowlist:a,denylist:n}))),void 0!==d&&("boolean"==typeof d?d&&eT():eT(d)),void 0!==u)for(let e of(void 0!==y&&eM({...y,runtimeCaching:u}),u))this._router.registerRoute(P(e.matcher,e.handler,e.method));f&&eH()}}e={precacheEntries:[{'revision':'dca733863ae22dfecda274f77a182815','url':'/_next/static/RzpTwkMTH9kFpGEzucoWT/_buildManifest.js'},{'revision':'b6652df95db52feb4daf4eca35380933','url':'/_next/static/RzpTwkMTH9kFpGEzucoWT/_ssgManifest.js'},{'revision':null,'url':'/_next/static/chunks/639-3929e42871f28a0b.js'},{'revision':null,'url':'/_next/static/chunks/6a6d70e5-af3ed99c22a9954b.js'},{'revision':null,'url':'/_next/static/chunks/941-a716cd6717a34c1d.js'},{'revision':null,'url':'/_next/static/chunks/app/_not-found/page-1369e8ded20e095e.js'},{'revision':null,'url':'/_next/static/chunks/app/layout-405e9984f7cf4c87.js'},{'revision':null,'url':'/_next/static/chunks/app/list/page-9fe900faadfac634.js'},{'revision':null,'url':'/_next/static/chunks/app/page-e40fb76a9f47b376.js'},{'revision':null,'url':'/_next/static/chunks/framework-c25027af42eb8c45.js'},{'revision':null,'url':'/_next/static/chunks/main-5bc37bc0b3900771.js'},{'revision':null,'url':'/_next/static/chunks/main-app-57e6717f9ca83b7f.js'},{'revision':null,'url':'/_next/static/chunks/pages/_app-1872fe6e3ae36b2e.js'},{'revision':null,'url':'/_next/static/chunks/pages/_error-ecd5c93ad7b9b50b.js'},{'revision':'79330112775102f91e1010318bae2bd3','url':'/_next/static/chunks/polyfills-78c92fac7aa8fdd8.js'},{'revision':null,'url':'/_next/static/chunks/webpack-804324c9ea4c4782.js'},{'revision':null,'url':'/_next/static/css/b6860a5b84c8bda1.css'},{'revision':'f1b44860c66554b91f3b1c81556f73ca','url':'/_next/static/media/05a31a2ca4975f99-s.woff2'},{'revision':'c4eb7f37bc4206c901ab08601f21f0f2','url':'/_next/static/media/513657b02c5c193f-s.woff2'},{'revision':'bb9d99fb9bbc695be80777ca2c1c2bee','url':'/_next/static/media/51ed15f9841b9f9d-s.woff2'},{'revision':'74c3556b9dad12fb76f84af53ba69410','url':'/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2'},{'revision':'dd930bafc6297347be3213f22cc53d3e','url':'/_next/static/media/d6b16ce4a6175f26-s.woff2'},{'revision':'0e89df9522084290e01e4127495fae99','url':'/_next/static/media/ec159349637c90ad-s.woff2'},{'revision':'71f3fcaf22131c3368d9ec28ef839831','url':'/_next/static/media/fd4db3eb5472fc27-s.woff2'},{'revision':'8e061864f388b47f33a1c3780831193e','url':'/next.svg'},{'revision':'61c6b19abff40ea7acd577be818f3976','url':'/vercel.svg'}],skipWaiting:!0,clientsClaim:!0,navigationPreload:!0},new e$({precacheController:ec(),router:U()}).install(e),self.addEventListener("fetch",e=>{if(e.request.url.endsWith("/share-target/")&&"GET"===e.request.method)return console.log(11111),e.respondWith((async()=>{let t=await e.request.formData();return t.get("title"),t.get("text"),t.get("url"),console.log("11111"),Response.redirect("/",303)})())})}();